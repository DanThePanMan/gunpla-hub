-set up schema (done)
-set up router and make a login page (done)
 -test front and back end connection (done)
-create new user (done)
-do input sanitization and normalization in server side(done) (not really, need one for each form)
-make front end show message from validator (done)
-finsih login page (only api call left)
-set up the jwt middleware (done)
-make front end store the jwt token with react context (done)


- now look at login, do the same with sign up and make them redirect to home (done)
-new post(done)

- finish the post get and post routes, then do params for when you want a specific users' posts. 
-show all posts(route done, now i need to make it fetch on themain page")(done)

-pics (done)
    here is how pics will work: each pic has a url, and that can be stored in the db for image access

    in the app, after you upload, you retrieve the url and push it into postgres.

    1: start from the front end, make image uploadable and print out the image url
    2: make the post request also include images
    3: in the back end store it


-post detail (done)
    1. add post to react router
    1.5. make all posts clickable ot navigate to that link
    2. test out parameterized inputs
    3. write route for individual post content and make sure it actually gets the right post
    4. implement all post funcitonalities including share




-user 5page
(now it will be the same as the ejs app)

-commenting and liking
-following
-show posts from who i followed
-pfp
-upload images

(advanced stuff)
-direct message


